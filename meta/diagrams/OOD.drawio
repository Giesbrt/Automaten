<mxfile host="drawio-plugin" modified="2025-03-04T11:29:37.851Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36" etag="53-LBdFyKOgiTSc5QIl1" version="22.1.22" type="embed">
  <diagram id="23iRSUPoRavnBvh4doch" name="Page-1">
    <mxGraphModel dx="2471" dy="963" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="2" value="State" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-330" y="40" width="350" height="290" as="geometry" />
        </mxCell>
        <mxCell id="3" value="&lt;div&gt;self._transitions: _ty.Set[Transition]&lt;/div&gt;&lt;div&gt;self._state_name: str&lt;/div&gt;&lt;div&gt;self._activation_callback: _ty.Callable or None&lt;/div&gt;&lt;div&gt;self._is_active: bool&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="2" vertex="1">
          <mxGeometry y="26" width="350" height="80" as="geometry" />
        </mxCell>
        <mxCell id="4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="2" vertex="1">
          <mxGeometry y="106" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="5" value="&lt;div&gt;set_name(self, new_name: str) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_name(self) -&amp;gt; str:&lt;/div&gt;&lt;div&gt;get_transitions(self) -&amp;gt; _ty.Set[&quot;Transition&quot;]:&lt;/div&gt;&lt;div&gt;add_transition(self, new_transition: &quot;Transition&quot;) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;remove_transition(self, old_transition: &quot;Transition&quot;) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;find_transition(self, current_input_char: str) -&amp;gt; _result.Result:&lt;/div&gt;&lt;div&gt;set_activation_callback(self, callback: _ty.Callable) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_activation_callback(self) -&amp;gt; _ty.Callable or None:&lt;/div&gt;&lt;div&gt;activate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;deactivate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;is_active(self) -&amp;gt; bool:&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="2" vertex="1">
          <mxGeometry y="114" width="350" height="176" as="geometry" />
        </mxCell>
        <mxCell id="6" value="Transition" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="710" y="30" width="350" height="270" as="geometry" />
        </mxCell>
        <mxCell id="7" value="&lt;div&gt;self.start_state: State&lt;/div&gt;&lt;div&gt;self.transition_target_state: State&lt;/div&gt;&lt;div&gt;self.activation_callback: _ty.Callable or None&lt;/div&gt;&lt;div&gt;self._condition: _ty.List[_ty.Any]&lt;/div&gt;&lt;div&gt;self._is_active: bool&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6" vertex="1">
          <mxGeometry y="26" width="350" height="84" as="geometry" />
        </mxCell>
        <mxCell id="8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6" vertex="1">
          <mxGeometry y="110" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="9" value="&lt;div&gt;canTransition(self, current_input: _ty.Any) -&amp;gt; _result.Result:&lt;/div&gt;&lt;div&gt;get_transition_target(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_start_state(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_condition(self) -&amp;gt; _ty.List[_ty.Any]:&lt;/div&gt;&lt;div&gt;set_condition(self, new_condition: _ty.List[_ty.Any]) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;set_activation_callback(self, callback: _ty.Callable) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_activation_callback(self) -&amp;gt; _ty.Callable or None:&lt;/div&gt;&lt;div&gt;activate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;deactivate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;is_active(self) -&amp;gt; bool:&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6" vertex="1">
          <mxGeometry y="118" width="350" height="152" as="geometry" />
        </mxCell>
        <mxCell id="10" value="Automaton" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="150" y="30" width="440" height="440" as="geometry" />
        </mxCell>
        <mxCell id="11" value="&lt;div&gt;self.states: OrderedSet[State]&lt;/div&gt;&lt;div&gt;self.transitions: OrderedSet[Transition]&lt;/div&gt;&lt;div&gt;self.current_state: State | None&lt;/div&gt;&lt;div&gt;self.start_state: State | None&lt;/div&gt;&lt;div&gt;self.end_states: _ty.Set[State]&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="10" vertex="1">
          <mxGeometry y="26" width="440" height="104" as="geometry" />
        </mxCell>
        <mxCell id="12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="10" vertex="1">
          <mxGeometry y="130" width="440" height="8" as="geometry" />
        </mxCell>
        <mxCell id="13" value="&lt;div&gt;get_states(self) -&amp;gt; OrderedSet[State]:&lt;/div&gt;&lt;div&gt;get_transitions(self, scrape_transitions: bool = True) -&amp;gt; OrderedSet[Transition]:&lt;/div&gt;&lt;div&gt;get_current_state(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_start_state(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;set_start_state(self, new_start_state: State) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;set_states(self, new_states: OrderedSet[State]) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;add_state(self, state: State, state_type: str) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_state_by_id(self, state_id: int) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_transition_by_id(self, transition_id: int) -&amp;gt; Transition:&lt;/div&gt;&lt;div&gt;set_transitions(self, new_transitions: OrderedSet[Transition]) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;simulate_one_step(self) -&amp;gt; _result.Result:&lt;/div&gt;&lt;div&gt;set_input(self, automaton_input: _ty.Any) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_input(self) -&amp;gt; _ty.Any:&lt;/div&gt;&lt;div&gt;get_state_index(self, state: State) -&amp;gt; int:&lt;/div&gt;&lt;div&gt;get_transition_index(self, transition: Transition) -&amp;gt; int:&lt;/div&gt;&lt;div&gt;get_current_index(self) -&amp;gt; int:&lt;/div&gt;&lt;div&gt;get_current_return_value(self) -&amp;gt; _ty.Any:&lt;/div&gt;&lt;div&gt;delete_state(self, state: &quot;State&quot;) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;delete_transition(self, transition: &quot;Transition&quot;) -&amp;gt; None:&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="10" vertex="1">
          <mxGeometry y="138" width="440" height="302" as="geometry" />
        </mxCell>
        <mxCell id="14" value="DFAState" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-370" y="560" width="340" height="310" as="geometry" />
        </mxCell>
        <mxCell id="15" value="&lt;div&gt;self._transitions: _ty.Set[Transition]&lt;/div&gt;&lt;div&gt;self._state_name: str&lt;/div&gt;&lt;div&gt;self._activation_callback: _ty.Callable or None&lt;/div&gt;&lt;div&gt;self._is_active: bool&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="14" vertex="1">
          <mxGeometry y="26" width="340" height="104" as="geometry" />
        </mxCell>
        <mxCell id="16" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="14" vertex="1">
          <mxGeometry y="130" width="340" height="8" as="geometry" />
        </mxCell>
        <mxCell id="17" value="&lt;div&gt;set_name(self, new_name: str) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_name(self) -&amp;gt; str:&lt;/div&gt;&lt;div&gt;get_transitions(self) -&amp;gt; _ty.Set[&quot;Transition&quot;]:&lt;/div&gt;&lt;div&gt;add_transition(self, new_transition: &quot;Transition&quot;) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;remove_transition(self, old_transition: &quot;Transition&quot;) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;find_transition(self, current_input_char: str) -&amp;gt; _result.Result:&lt;/div&gt;&lt;div&gt;set_activation_callback(self, callback: _ty.Callable) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_activation_callback(self) -&amp;gt; _ty.Callable or None:&lt;/div&gt;&lt;div&gt;activate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;deactivate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;is_active(self) -&amp;gt; bool:&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="14" vertex="1">
          <mxGeometry y="138" width="340" height="172" as="geometry" />
        </mxCell>
        <mxCell id="18" value="DFATransition" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="725.05" y="510" width="350" height="290" as="geometry" />
        </mxCell>
        <mxCell id="19" value="&lt;div&gt;self.start_state: State&lt;/div&gt;&lt;div&gt;self.transition_target_state: State&lt;/div&gt;&lt;div&gt;self.activation_callback: _ty.Callable or None&lt;/div&gt;&lt;div&gt;self._condition: _ty.List[_ty.Any]&lt;/div&gt;&lt;div&gt;self._is_active: bool&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="18" vertex="1">
          <mxGeometry y="26" width="350" height="104" as="geometry" />
        </mxCell>
        <mxCell id="20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="18" vertex="1">
          <mxGeometry y="130" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="21" value="&lt;div&gt;canTransition(self, current_input: _ty.Any) -&amp;gt; _result.Result:&lt;/div&gt;&lt;div&gt;get_transition_target(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_start_state(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_condition(self) -&amp;gt; _ty.List[_ty.Any]:&lt;/div&gt;&lt;div&gt;set_condition(self, new_condition: _ty.List[_ty.Any]) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;set_activation_callback(self, callback: _ty.Callable) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_activation_callback(self) -&amp;gt; _ty.Callable or None:&lt;/div&gt;&lt;div&gt;activate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;deactivate(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;is_active(self) -&amp;gt; bool:&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="18" vertex="1">
          <mxGeometry y="138" width="350" height="152" as="geometry" />
        </mxCell>
        <mxCell id="22" value="DFAAutomaton" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="120" y="560" width="460" height="430" as="geometry" />
        </mxCell>
        <mxCell id="23" value="&lt;div&gt;self.states: OrderedSet[State]&lt;/div&gt;&lt;div&gt;self.transitions: OrderedSet[Transition]&lt;/div&gt;&lt;div&gt;self.current_state: State | None&lt;/div&gt;&lt;div&gt;self.start_state: State | None&lt;/div&gt;&lt;div&gt;self.end_states: _ty.Set[State]&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="22" vertex="1">
          <mxGeometry y="26" width="460" height="114" as="geometry" />
        </mxCell>
        <mxCell id="24" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="22" vertex="1">
          <mxGeometry y="140" width="460" height="8" as="geometry" />
        </mxCell>
        <mxCell id="25" value="&lt;div&gt;get_states(self) -&amp;gt; OrderedSet[State]:&lt;/div&gt;&lt;div&gt;get_transitions(self, scrape_transitions: bool = True) -&amp;gt; OrderedSet[Transition]:&lt;/div&gt;&lt;div&gt;get_current_state(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_start_state(self) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;set_start_state(self, new_start_state: State) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;set_states(self, new_states: OrderedSet[State]) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;add_state(self, state: State, state_type: str) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_state_by_id(self, state_id: int) -&amp;gt; State:&lt;/div&gt;&lt;div&gt;get_transition_by_id(self, transition_id: int) -&amp;gt; Transition:&lt;/div&gt;&lt;div&gt;set_transitions(self, new_transitions: OrderedSet[Transition]) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;simulate_one_step(self) -&amp;gt; _result.Result:&lt;/div&gt;&lt;div&gt;set_input(self, automaton_input: _ty.Any) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;get_input(self) -&amp;gt; _ty.Any:&lt;/div&gt;&lt;div&gt;get_state_index(self, state: State) -&amp;gt; int:&lt;/div&gt;&lt;div&gt;get_transition_index(self, transition: Transition) -&amp;gt; int:&lt;/div&gt;&lt;div&gt;get_current_index(self) -&amp;gt; int:&lt;/div&gt;&lt;div&gt;get_current_return_value(self) -&amp;gt; _ty.Any:&lt;/div&gt;&lt;div&gt;delete_state(self, state: &quot;State&quot;) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;delete_transition(self, transition: &quot;Transition&quot;) -&amp;gt; None:&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="22" vertex="1">
          <mxGeometry y="148" width="460" height="282" as="geometry" />
        </mxCell>
        <mxCell id="26" value="Am Beispiel eines DFA-Automatens" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry y="10" width="210" height="30" as="geometry" />
        </mxCell>
        <mxCell id="27" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.456;entryY=0.923;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="22" target="13" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="320" y="430" as="sourcePoint" />
            <mxPoint x="480" y="430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="28" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.138;entryY=1.038;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.1;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="14" target="5" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="50" y="360" as="sourcePoint" />
            <mxPoint x="210" y="360" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="29" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.438;entryY=1.077;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.925;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="18" target="9" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="530" y="350" as="sourcePoint" />
            <mxPoint x="690" y="350" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="38" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=-0.002;exitY=0.756;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="19" target="23" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="370" as="sourcePoint" />
            <mxPoint x="490" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="45" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="38" vertex="1" connectable="0">
          <mxGeometry x="0.596" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="46" value="0..*" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="38" vertex="1" connectable="0">
          <mxGeometry x="-0.7727" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="39" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;entryX=-0.006;entryY=0.115;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1.01;exitY=0.28;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="15" target="23" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="370" as="sourcePoint" />
            <mxPoint x="490" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="44" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="39" vertex="1" connectable="0">
          <mxGeometry x="0.6012" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="47" value="0..*" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="39" vertex="1" connectable="0">
          <mxGeometry x="-0.8469" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="40" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="3" target="11" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="370" as="sourcePoint" />
            <mxPoint x="490" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="43" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="40" vertex="1" connectable="0">
          <mxGeometry x="0.319" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="48" value="0..*" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="40" vertex="1" connectable="0">
          <mxGeometry x="-0.7672" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="41" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="7" target="11" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="370" as="sourcePoint" />
            <mxPoint x="490" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="42" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="41" vertex="1" connectable="0">
          <mxGeometry x="0.5799" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="49" value="0..*" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="41" vertex="1" connectable="0">
          <mxGeometry x="-0.8119" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
